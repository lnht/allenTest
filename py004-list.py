# #列表的增删改查
# x = [11, 12, 13, 14, 15]

# #1--增
# #末尾增加一个,2种方法
# x.append(16)
# x[len(x):] = [17]
# #末尾增加一个列表,2种方法
# x.extend([18, 19])
# x[len(x):] = [20, 21]#[11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
# #如果从一个指定位置增，会把后面的覆盖掉，而不是插入！
# x[len(x)-1 : ] = [99, 99] #[11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 99, 99]

# #插入
# x.insert(len(x)-2, 88) #[11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 88, 99, 99]



# #2--删
# #指定内容删。注意只会删找到的第一个。如果找不到要报错
# x.remove(99)#[11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 88, 99] # x.remove(100)# 报错：ValueError: list.remove(x): x not in list

# #删除指定位置,无参数，删最后一个
# x.pop()#[11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 88]
# x.pop(0)#[12, 13, 14, 15, 16, 17, 18, 19, 20, 88]
# x.pop(-1)#[12, 13, 14, 15, 16, 17, 18, 19, 20]

# #删除多个元素，用切片来实现
# del x[1:3] #删除了索引1和2的元素，注意不含索引3！[12, 15, 16, 17, 18, 19, 20]

# #列表清空
# x.clear() #[]


#3---改

#修改
x = [21, 22, 23, 24, 25, 26]
x[5] = 27 #通过索引改其中一个[21, 22, 23, 24, 25, 27]
x[1:] = [2, 3, 4, 5, 6, 7] #改连续多个 [21, 2, 3, 4, 5, 6, 7] 注意！这种方法是把从索引位后的清空，然后加上新的队列！！
x[1:3] = [33, 34, 35, 36]#[21, 33, 34, 35, 36, 4, 5, 6, 7]，把其中索引[1, 3)的值删了再插入，

#倒序、排序
x.reverse() #顺序翻转 [7, 6, 5, 4, 36, 35, 34, 33, 21]

x.sort()#排序，默认升序[4, 5, 6, 7, 21, 33, 34, 35, 36]
x.sort(reverse=True) #倒序[36, 35, 34, 33, 21, 7, 6, 5, 4]


#跨类型排序的限制
# # y = ["A", "B", 1, -1, 3.4] #跨类型无法排序
# y = ["Car", "A", "Bar"]#可以排序，['A', 'Bar', 'Car']，应该是首字母在排序
# y = [1, 2, 1.4, -1] #可以排序，[-1, 1, 1.4, 2]
# y.sort()
# print("y[]:", y)

#4---查
#查列表中指定值的个数
x[-5] = 4 #[36, 35, 34, 33, 4, 7, 6, 5, 4]
print(x.count(4)) #结果为2

#查某个值的索引
#index(要超找的目标, 查找其实index, 查找结束index)
print("1st 4: ", x.index(4))#[36, 35, 34, 33, 4, 7, 6, 5, 4]中第一个4的索引是4
print("2nd 4: ", x.index(4,5))#[36, 35, 34, 33, 4, 7, 6, 5, 4]从index5开始找，第一个4的索引是8

#拷贝一个列表,下面两种拷贝是复制值【浅拷贝】
x2 = x.copy()
x3 = x[:]
#下面不是拷贝，而是xx指向要x
xx = x

print("x:", x)
print("x2:", x2)
print("x3:", x3)
print("xx:", xx)

x[0] = 999
print("x:", x)
print("x2:", x2)
print("x3:", x3)
print("xx:", xx)
